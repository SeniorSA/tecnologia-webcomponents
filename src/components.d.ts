/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { TecnologiaTheme } from "./components/interfaces";
import { TecStatus } from "./models/status.model";
import { TecButtonColor, TecButtonIconMode, TecButtonMode, TecButtonSize } from "./components/tec-button/tec-button.model";
export namespace Components {
    interface TecBottomBar {
        "buttonPosition": ButtonPosition;
        "text": string;
        "theme": TecnologiaTheme;
        "useAnimation": boolean;
    }
    interface TecButton {
        /**
          * Optional ID to be attached on button
         */
        "buttonId": string;
        /**
          * Colors of button (like gradient)
         */
        "color": TecButtonColor;
        /**
          * Boolean to indicate if button is disabled
         */
        "disabled": boolean;
        /**
          * If `true` button use `width: 100%`
         */
        "fullWidth": boolean;
        /**
          * Icon class from FontAwesome 5 Free Allows to use: brands, regular, solid Example: 'far fa-paper-plane'
         */
        "icon": string;
        /**
          * Position of icon
         */
        "iconMode": TecButtonIconMode;
        /**
          * Text to show inside button
         */
        "label": string;
        "loading": boolean;
        /**
          * Mode of button (like square or rounded)
         */
        "mode": TecButtonMode;
        /**
          * If `true` button removes label
         */
        "onlyIcon": boolean;
        /**
          * Size of button
         */
        "size": TecButtonSize;
        /**
          * The status of button (color)
         */
        "status": TecStatus;
        "theme": TecnologiaTheme;
    }
    interface TecProductHeader {
        /**
          * Use to make a bar fixed on top
          * @default true
         */
        "sticky": boolean;
        "theme": TecnologiaTheme;
        /**
          * Set `false` to remove `cursor: pointer` from title
          * @summary when `false` this property disable `titleClicked` event.
          * @default true
         */
        "titleCursorPointer": boolean;
        /**
          * The product name
         */
        "titleProduct": string;
    }
}
declare global {
    interface HTMLTecBottomBarElement extends Components.TecBottomBar, HTMLStencilElement {
    }
    var HTMLTecBottomBarElement: {
        prototype: HTMLTecBottomBarElement;
        new (): HTMLTecBottomBarElement;
    };
    interface HTMLTecButtonElement extends Components.TecButton, HTMLStencilElement {
    }
    var HTMLTecButtonElement: {
        prototype: HTMLTecButtonElement;
        new (): HTMLTecButtonElement;
    };
    interface HTMLTecProductHeaderElement extends Components.TecProductHeader, HTMLStencilElement {
    }
    var HTMLTecProductHeaderElement: {
        prototype: HTMLTecProductHeaderElement;
        new (): HTMLTecProductHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "tec-bottom-bar": HTMLTecBottomBarElement;
        "tec-button": HTMLTecButtonElement;
        "tec-product-header": HTMLTecProductHeaderElement;
    }
}
declare namespace LocalJSX {
    interface TecBottomBar {
        "buttonPosition"?: ButtonPosition;
        "text"?: string;
        "theme"?: TecnologiaTheme;
        "useAnimation"?: boolean;
    }
    interface TecButton {
        /**
          * Optional ID to be attached on button
         */
        "buttonId"?: string;
        /**
          * Colors of button (like gradient)
         */
        "color"?: TecButtonColor;
        /**
          * Boolean to indicate if button is disabled
         */
        "disabled"?: boolean;
        /**
          * If `true` button use `width: 100%`
         */
        "fullWidth"?: boolean;
        /**
          * Icon class from FontAwesome 5 Free Allows to use: brands, regular, solid Example: 'far fa-paper-plane'
         */
        "icon"?: string;
        /**
          * Position of icon
         */
        "iconMode"?: TecButtonIconMode;
        /**
          * Text to show inside button
         */
        "label": string;
        "loading"?: boolean;
        /**
          * Mode of button (like square or rounded)
         */
        "mode"?: TecButtonMode;
        /**
          * Emitted when button is clicked Captured by onClick listener. > Note: if button was disabled event can't be dispatch
         */
        "onClicked"?: (event: CustomEvent<UIEvent>) => void;
        /**
          * If `true` button removes label
         */
        "onlyIcon"?: boolean;
        /**
          * Size of button
         */
        "size"?: TecButtonSize;
        /**
          * The status of button (color)
         */
        "status"?: TecStatus;
        "theme"?: TecnologiaTheme;
    }
    interface TecProductHeader {
        /**
          * Emitted when the title was clicked
          * @returns void
         */
        "onTitle-clicked"?: (event: CustomEvent<void>) => void;
        /**
          * Use to make a bar fixed on top
          * @default true
         */
        "sticky"?: boolean;
        "theme"?: TecnologiaTheme;
        /**
          * Set `false` to remove `cursor: pointer` from title
          * @summary when `false` this property disable `titleClicked` event.
          * @default true
         */
        "titleCursorPointer"?: boolean;
        /**
          * The product name
         */
        "titleProduct"?: string;
    }
    interface IntrinsicElements {
        "tec-bottom-bar": TecBottomBar;
        "tec-button": TecButton;
        "tec-product-header": TecProductHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "tec-bottom-bar": LocalJSX.TecBottomBar & JSXBase.HTMLAttributes<HTMLTecBottomBarElement>;
            "tec-button": LocalJSX.TecButton & JSXBase.HTMLAttributes<HTMLTecButtonElement>;
            "tec-product-header": LocalJSX.TecProductHeader & JSXBase.HTMLAttributes<HTMLTecProductHeaderElement>;
        }
    }
}
